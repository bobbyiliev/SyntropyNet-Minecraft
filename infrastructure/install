#!/bin/bash

#/
#--------------------------------------------------------------------------
# Install All Dependencies for the Syntropy Network
#--------------------------------------------------------------------------
#
# To run the setup script just execute the follwoing commands:
# # export API_KEY=YOUR_API_KEY_HERE
# # git clone git@github.com:bobbyiliev/SyntropyNet-Minecraft /var/www/syntropynet ; cd /var/www/syntropynet ; time bash infrastructure/install
#--------------------------------------------------------------------------
#/

PHP="7.4"
MYSQL_SERVICE="MySQL"
MYSQL_PACKAGE="mysql-server"

function nginx_install(){
    echo  "| Installing Nginx ";

    apt update -y
    apt -y install nginx
    systemctl restart nginx
}

function mysql_install(){
    echo  "| Installing $MYSQL_SERVICE ";

    apt update
    apt install -y ${MYSQL_PACKAGE}
}

function php_install(){
    echo  "| Installing PHP $PHP and all necessary files";

    apt update
    apt install -y language-pack-en-base
    export LC_ALL=en_US.UTF-8
    export LANG=en_US.UTF-8
    apt install -y software-properties-common
    add-apt-repository -y ppa:ondrej/php
    apt -y update
    apt -y upgrade

    apt install -y unzip php-cli screen
    apt install -y php$PHP-cli php$PHP-common php$PHP-mysql php$PHP-gd php$PHP-mysql php$PHP-curl php$PHP-mbstring php$PHP-xml php$PHP-zip php$PHP-fpm curl git

    rm /usr/bin/php
    ln -s /usr/bin/php$PHP /usr/bin/php
}

function swap_setup(){
    CHECK_SWAP=$(swapon -s | wc -l)
    if [ $CHECK_SWAP -lt 1 ] ; then

        echo  "| Adding swap file "

        # Create a swap file
        sudo fallocate -l 1G /swapfile
        sudo chmod 600 /swapfile
        sudo mkswap /swapfile
        sudo swapon /swapfile

        # Making the swap file permanent
        sudo cp /etc/fstab /etc/fstab.bak
        echo '/swapfile none swap sw 0 0' | sudo tee -a /etc/fstab
    fi
}

function composer_install(){
    echo  "| Installing Composer ";
    export COMPOSER_ALLOW_SUPERUSER=1;
    curl -sS https://getcomposer.org/installer | sudo php -- --install-dir=/usr/local/bin --filename=composer
}

function npm_install(){
    echo  "| Installing npm"

    curl -sL https://deb.nodesource.com/setup_16.x | sudo bash -
    sudo apt-get install -y nodejs
}

function laravel_install(){

    echo  "| Install Laravel "
    password=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 14 | head -n 1)

    sudo chown -R www-data:www-data /var/www

    mysql -e "CREATE DATABASE wave DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci;"
    mysql -e "CREATE USER 'wave'@'%' IDENTIFIED WITH mysql_native_password BY '$password'";
    mysql -e "GRANT ALL ON wave.* TO 'wave'@'%';"

    cd /var/www/syntropynet

    cp .env.example .env
    sed -i "s/DB_PASSWORD=/DB_PASSWORD=${password}/g" /var/www/syntropynet/.env

    composer install

    php artisan key:generate

    php artisan migrate

    php artisan db:seed

    php artisan storage:link

}

function bungeecord_install(){
    echo  "| Install and start BungeeCord Proxy in Screen "
    apt install default-jre -y
    screen -dmS BungeeCord
    screen -R BungeeCord -X stuff 'cd /var/www/syntropynet/infrastructure/ ; java -Xms512M -Xmx512M -jar BungeeCord.jar^M'
}

function docker_install(){
    echo  "| Install Docker "
    apt install docker.io -y
}

function start_syntropy_agent(){
    echo  "| Start the Syntropy agent in Docker "
    docker run --network="host" --restart=on-failure:10 --cap-add=NET_ADMIN   --cap-add=SYS_MODULE -v /var/run/docker.sock:/var/run/docker.sock:ro   --device /dev/net/tun:/dev/net/tun --name=syntropynet-agent   -e SYNTROPY_API_KEY=${API_KEY}   -e SYNTROPY_NETWORK_API='docker' -d syntropynet/agent:stable
}

function add_nginx_server_block(){
    echo  "| Configure the Nginx service "

echo "server {
        root /var/www/syntropynet/public;
        index index.php index.html index.htm;
        server_name _;
        location / {
                try_files \$uri \$uri/ /index.php?\$query_string;
        }
        location ~*  \.(jpg|jpeg|png|gif)\$1 {
                expires 365d;
        }
        location ~*  \.(ico|css|js)\$ {
                expires 365d;
        }
        location ~ \.php\$ {
                include snippets/fastcgi-php.conf;
                fastcgi_pass unix:/run/php/php7.4-fpm.sock;
        }
        location ~ /\.ht {
                deny all;
        }
}" > /etc/nginx/sites-available/default

    systemctl restart nginx

}

function install_syntropy_cli(){
    echo  "| Install the Syntropy CLI "
    apt install python3-pip -y
    pip install syntropycli
    python3 -m site &> /dev/null && PATH="$PATH:`python3 -m site --user-base`/bin"

    echo "Make sure to specify the SYNTROPY_API_TOKEN in your .env file"
}

function install_doctl_cli(){
    echo  "| Install the doctl CLI "
    snap install doctl
}

function main(){

    if [[ -z ${API_KEY} ]] ; then
        echo "Specify the Syntrpy API Key with:"
        echo ""
        echo "export API_KEY=YOUR_API_KEY_HERE"
        exit 1
    fi

    echo "| Install All Dependencies for the Syntropy Network"

    # Call all functions
    nginx_install
    mysql_install
    php_install
    swap_setup
    composer_install
    npm_install
    laravel_install
    bungeecord_install
    docker_install
    start_syntropy_agent
    add_nginx_server_block
    install_syntropy_cli
    install_doctl_cli

    sudo chown -R www-data:www-data /var/www

    echo  "| Happy Gaming! "
}

main